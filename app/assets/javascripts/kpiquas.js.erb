// # Place all the behaviors and hooks related to the matching controller here.
// # All this logic will automatically be available in application.js.
// # You can use CoffeeScript in this file: http://coffeescript.org/
var baseImages = []
var baseCharacteristics = []
var pocketImages = []
var pocketCharacteristics = []

var SIZE = 350;
var baseCounterRight  = 5;
var baseCounterLeft = 11;
var baseCounterCenter = 1;
var pocketCounterRight  = 0;
var pocketCounterLeft = 2;
var pocketCounterCenter = 1;




function rotatorHorizontal(images){

  // var imgtag = "" + <%= image_tag('placeholder', :class => "small") %>;
  // //<img src="placeholder" class="small">
  // for (var n = 0; n < 6; n++){
  //   imgtag = imgtag.replace("placeholder", images[n]);
  //   //si images[n] -> public/lorem.ipsum.jpg
  //   //<img src="public/lorem.ipsum.jpg" class="small">
  //   $('.ul-rotator-horizontal').append(imgtag);
  // }

  $('.ul-rotator-horizontal').append('<img class="small" src=/'+images[11]+'>')
  $('.ul-rotator-horizontal').append('<img class="small" src=/'+images[0]+'>')
  $('.ul-rotator-horizontal').append('<img class="small" src=/'+images[1]+'>')
  $('.ul-rotator-horizontal').append('<img class="small" src=/'+images[2]+'>')
  $('.ul-rotator-horizontal').append('<img class="small" src=/'+images[3]+'>')
  $('.ul-rotator-horizontal').append('<img class="small" src=/'+images[4]+'>')
  $('.ul-rotator-horizontal').append('<img class="small" src=/'+images[5]+'>')  

  function keyBaseCounterCenter(count){
    baseCounterCenter =  count;
    baseCounterCenter =  limits(baseCounterCenter)
  } 
  function keyBaseCounterRight(count){
    baseCounterRight  =  count;
    baseCounterRight  = limits(baseCounterRight);
  }

  function keyBaseCounterLeft(count){
    baseCounterLeft =  count;
    baseCounterLeft = limits(baseCounterLeft)
  }

  function limits(current_position){ 
    if (current_position == -1) {
      current_position = (images.length - 1)
    }
    else if (current_position == images.length ) {
      current_position = 0
    }
    return current_position;
  }

  document.addEventListener("keydown", function(event){
    
    if (event.which === 37 || event.which === 39){
      event.preventDefault()
    }
  })

  document.addEventListener("keyup", function(event){
    if (event.which === 37) {
      // I want to know wich one is my element in the midlle in order to make it bigger and to select his information
      keyBaseCounterCenter(baseCounterCenter + 1)
      // I want to set which image is going to create on the RIGHT
      keyBaseCounterRight(baseCounterRight  + 1)
      keyBaseCounterLeft(baseCounterLeft  + 1)
      $('.ul-rotator-horizontal').append('<img class="small" src=/'+images[baseCounterRight ]+'>')
      $(".ul-rotator-horizontal img:first").hide(250,  function(){            
        $(".ul-rotator-horizontal img:first").remove() 
      })
    }
     else if (event.which === 39){
      // I want to know wich one is my element in the midlle in order to make it bigger and to select his information    
      keyBaseCounterCenter(baseCounterCenter - 1)
      // I want to set which image is going to create on the LEFT
      keyBaseCounterLeft(baseCounterLeft-1)
      keyBaseCounterRight(baseCounterRight-1)
      $('.ul-rotator-horizontal').prepend(' <img class="small origin" src=/'+images[baseCounterLeft]+' style=" display: none">')
      $('.origin').show(250)
      // I want to set wich image is deleting on RIGHT
      $(".ul-rotator-horizontal img:last").remove()
    }
  })
}


function rotatorVertical(images){
  $('.ul-rotator-vertical').append('<img class="small" src=/'+images[2]+'>')
  $('.ul-rotator-vertical').append('<img class="small" src=/'+images[0]+'>')
  $('.ul-rotator-vertical').append('<img class="small" src=/'+images[1]+'>')
  $('.ul-rotator-vertical').append('<img class="small" src=/'+images[2]+'>') 
  $('.ul-rotator-vertical').append('<img class="small" src=/'+images[0]+'>') 

  function keyPocketCounterCenter(count){
    pocketCounterCenter =  count;
    pocketCounterCenter =  limits(pocketCounterCenter)
  } 
  function keyPocketCounterRight(count){
    pocketCounterRight  =  count;
    pocketCounterRight  = limits(pocketCounterRight);
  }

  function keyPocketCounterLeft(count){
    pocketCounterLeft =  count;
    pocketCounterLeft = limits(pocketCounterLeft)
  }
  function limits(current_position){ 
    if (current_position == -1) {
      current_position = (images.length - 1)
    }
    else if (current_position == images.length ) {
      current_position = 0
    }
    return current_position;
  }
  document.addEventListener("keydown", function(event){
    
    if (event.which === 38 || event.which === 40){
      event.preventDefault()
    }
  })
  document.addEventListener("keyup", function(event){
    if (event.which === 38){
      // I want to know wich one is my element in the midlle in order to make it bigger and to select his information
      keyPocketCounterCenter(pocketCounterCenter + 1)
      // I want to set which image is going to create on the RIGHT
      keyPocketCounterRight(pocketCounterRight  + 1)
      keyPocketCounterLeft(pocketCounterLeft  + 1)
        $('.ul-rotator-vertical').append('<img class="small" src=/'+images[pocketCounterRight ]+'>')
        $(".ul-rotator-vertical img:first").hide(500,  function(){
        $(".ul-rotator-vertical img:first").remove() 
      });

    }
    else if (event.which === 40){
      // I want to know wich one is my element in the midlle in order to make it bigger and to select his information    
      keyPocketCounterCenter(pocketCounterCenter - 1)
      // I want to set which image is going to create on the LEFT
      keyPocketCounterLeft(pocketCounterLeft-1)
      keyPocketCounterRight(pocketCounterRight-1)
      $('.ul-rotator-vertical').prepend('<img class="small origin" src=/'+images[pocketCounterLeft]+' style=" display: none">')
      $('.ul-rotator-vertical .origin').show(500)
      // I want to set wich image is deleting on RIGHT
      $(".ul-rotator-vertical img:last").remove();
    }
  })
}


function prepareModal(base, pocket, hood, neck){
    var hoodToString = 'No' 
    var neckToString =  'Normal'
    if (hood == true){
      hoodToString = 'SÃ­'
    }
    else if (neck == true) {
      neckToString = 'Old School'
    } 
    $('.modal-content .base').text(base)
    $('.modal-content .pocket').text(pocket)
    $('.modal-content .hood').text(hoodToString)
    $('.modal-content .neck').text(neckToString)
}


$.ajax({
  url: '/api/v1/bases',
  success: handleBase,
  error: errorMessage
})

$.ajax({
  url: '/api/v1/pockets',
  success: handlePocket,
  error: errorMessage
})

function handlePocket(response){
  var information = response
  information.forEach(function(pocket){
      pocketImages.push(pocket.image) 
      pocketCharacteristics.push(pocket)
  })
  
  rotatorVertical(pocketImages)
}

function handleBase(response){
  var information = response
  information.forEach(function(base){
      baseImages.push(base.image) 
      baseCharacteristics.push(base)
  })
  
  rotatorHorizontal(baseImages)
  
}

function errorMessage(){
  console.log('pifia');
}

function links(){
  $('.front-logo').on('click', function(){
    window.location.replace("http://localhost:3000/");
  })
  $('.first-bton').on('click', function(){
    window.location.replace("http://localhost:3000/#rotator");
  })
  $('.second-bton').on('click', function(){
    window.location.replace("http://localhost:3000/#look_book");
  })
  $('.back-homepage-text').on('click', function(){
    window.location.replace("http://localhost:3000/");
  })
  $('.fa-angle-double-down').on('click', function(){
    window.location.replace("http://localhost:3000/#rotator");
  })

}

$( document ).ready(function() {

  links()
  $('.modal-button').click(function(){
    prepareModal(baseCharacteristics[baseCounterCenter].color, pocketCharacteristics[pocketCounterCenter].color, baseCharacteristics[baseCounterCenter].hood, baseCharacteristics[baseCounterCenter].neck)
  })

  $('.order-button').on('click', function(event){
    //event.preventDefault(); 
    var hoodieDetails = {};
    hoodieDetails.base_id = baseCharacteristics[baseCounterCenter].id;
    hoodieDetails.pocket_id = pocketCharacteristics[pocketCounterCenter].id;
    $.ajax({
      url: '/new_order',
      method: "post",
      data: hoodieDetails, 
    })
  })
})




